
target/debug/build/crc-f77504953ec0047f/out/crc64_constants.rs,132
pub const ECMA: u64 1,0
pub const ECMA_TABLE:ECMA_TABLE2,44
pub const ISO: u64 260,6570
pub const ISO_TABLE:ISO_TABLE261,6613

target/debug/build/crc-f77504953ec0047f/out/crc32_constants.rs,234
pub const CASTAGNOLI: u32 1,0
pub const CASTAGNOLI_TABLE:CASTAGNOLI_TABLE2,40
pub const IEEE: u32 260,4110
pub const IEEE_TABLE:IEEE_TABLE261,4144
pub const KOOPMAN: u32 519,8207
pub const KOOPMAN_TABLE:KOOPMAN_TABLE520,8244

target/debug/build/crc-f77504953ec0047f/out/crc16_constants.rs,129
pub const X25: u16 1,0
pub const X25_TABLE:X25_TABLE2,28
pub const USB: u16 260,2838
pub const USB_TABLE:USB_TABLE261,2866

src/cal_machine.rs,1109
mod retriever;1,0
use crate:crate3,16
use chrono:chrono13,244
use retriever:retriever14,290
use serde:serde15,308
use std::time::Duration;16,345
use std:std17,370
stm!(cal_stm, Machine,25,507
type PeriodSeconds 39,1162
type AuthTokens 40,1188
const TWO_MINS_S: PeriodSeconds 42,1240
const REFRESH_PERIOD_S: PeriodSeconds 43,1279
pub struct VolatileAuthenticator 53,1484
    pub access_token: String,54,1519
    expires_in: u64,55,1549
pub struct RefreshToken(String)59,1614
pub struct Authenticators 109,2870
    refresh_token: RefreshToken,110,2898
    volatiles: VolatileAuthenticator,111,2931
pub struct Email(pub String)139,3744
    pub struct Appointments 155,4117
        pub events: Vec<Vec156,4147
        state: Machine,157,4179
pub struct Event 204,5735
    pub summary: String,205,5754
    pub description: Option<Option206,5779
    pub start: DateTime<DateTime207,5816
    pub end: DateTime<DateTime208,5848
    use Machine:Machine244,6880
    let today 246,6901
    let config_file 247,6950
    let retriever 248,6998
    let mut mach: Machine 249,7042

src/papirus_in.rs,618
use crate:crate1,0
use Machine:Machine2,23
use memmap:memmap3,39
use std:std4,72
const BLOCK_SIZE: usize 12,198
const MAX_PIN: usize 13,234
const READ_REG_OFFSET: usize 14,261
pub const SW1: Button 21,356
pub const SW2: Button 25,457
pub const SW3: Button 29,558
pub const SW4: Button 33,659
pub const SHORT_PRESS_DURATION: Duration 38,761
pub const LONG_PRESS_DURATION: Duration 39,832
stm!(button_stm, Machine,41,899
pub struct Button 45,989
    pin: Pin,46,1009
    state: Machine,47,1023
struct Pin(pub usize)100,2489
pub struct GPIO 102,2513
    map: Mmap,103,2531
    snap:snap104,2546

src/main.rs,145
mod cal_machine;3,54
mod cal_display;4,71
mod display;5,88
mod err;6,101
mod papirus_in;7,110
mod stm;8,126
use cal_machine::Error;10,136

src/display.rs,720
use crate::err;1,0
use serde::Serialize;2,16
use serde_json::error::Error as SerdeError;3,38
use std::io:std::io4,82
use std::net::TcpStream;5,121
use std::slice::Iter;6,146
pub const DRIVER_PORT: u16 8,169
pub enum Operation 12,246
    AddText(13,267
    AddText(String,13,267
    AddText(String, Pos,13,267
    AddText(String, Pos, Size,13,267
    AddText(String, Pos, Size, Id)13,267
    UpdateText(14,303
    UpdateText(Id,14,303
    UpdateText(Id, String)14,303
    RemoveText(15,331
    RemoveText(Id)15,331
    Clear,16,351
    WriteAll,17,362
type Id 20,379
type Size 21,397
pub struct Pos(pub u32, pub u32)24,436
pub struct RenderPipeline 31,535
    stream: BufWriter<BufWriter32,563

src/cal_machine/retriever.rs,2571
use chrono::prelude:chrono::prelude1,0
use reqwest:reqwest2,24
use serde::Deserialize;3,63
const DEVICE_CODE_URL: &str str5,88
const AUTHORISATION_URL: &str str6,170
const READ_URL: &str str7,248
const CLIENT_ID_KEY: &str str8,338
const CLIENT_ID_VAL: &str str9,379
const SCOPE_KEY: &str str11,487
const SCOPE_VAL: &str str12,520
const CLIENT_SECRET_KEY: &str str13,597
const CLIENT_SECRET_VAL: &str str14,646
const CODE_KEY: &str str15,706
const GRANT_TYPE_KEY: &str str16,737
const GRANT_TYPE_POLL_VAL: &str str17,780
const GRANT_TYPE_REFRESH_VAL: &str str18,856
const REFRESH_TOKEN_KEY: &str str19,910
const PAGE_TOKEN_KEY: &str str20,959
const TIME_MIN_KEY: &str str22,1002
const TIME_MAX_KEY: &str str23,1040
const MAX_RESULTS_KEY: &str str24,1078
const SINGLE_EVENTS_KEY: &str str25,1122
const AUTHORISATION_HEADER: &str str27,1171
const ACCEPT_HEADER: &str str28,1223
const ACCEPT_JSON: &str str29,1261
pub const TOKEN_TYPE: &str str30,1307
pub const ACCESS_DENIED_ERROR: &str str32,1347
pub const AUTHORISATION_PENDING_ERROR: &str str33,1402
pub const POLLING_TOO_FREQUENTLY_ERROR: &str str34,1473
pub struct PageToken(pub String)36,1534
pub struct EventRetriever 38,1569
    client: Client,39,1597
pub struct DeviceUserCodeResponse 115,4227
    pub device_code: String,116,4263
    pub user_code: String,117,4292
    pub expires_in: i64,118,4319
    pub interval: u32,119,4344
    pub verification_url: String,120,4367
pub const QUOTA_EXCEEDED_ERROR_CODE: &str str123,4404
pub struct DeviceUserCodeErrorResponse 125,4501
    pub error_code: String,126,4542
pub struct PollResponse 130,4603
    pub access_token: String,131,4629
    pub refresh_token: String,132,4659
    pub expires_in: u64,133,4690
    pub token_type: String,134,4715
pub struct RefreshResponse 138,4776
    pub access_token: String,139,4805
    pub expires_in: u64,140,4835
    pub token_type: String,141,4860
pub struct PollErrorResponse 145,4921
    pub error: String,146,4952
    pub error_description: String,147,4975
pub struct DateTimeStamp 152,5078
    pub date_time: String,154,5141
pub struct PersonalIdentifier 158,5216
    pub email: String,159,5248
pub struct Event 163,5304
    pub summary: String,164,5323
    pub description: Option<Option165,5348
    pub creator: PersonalIdentifier,166,5385
    pub start: DateTimeStamp,167,5422
    pub end: DateTimeStamp,168,5452
pub struct EventsResponse 173,5548
    pub next_page_token: Option<Option174,5576
    pub items: Vec<Vec175,5617

src/err.rs,126
        pub enum $enum_name 14,486
            $(15,516
                $var(16,531
                $var($embedded)16,531

src/cal_display.rs,948
use crate::display::Operation as Op;1,0
use crate:crate2,37
use chrono::prelude:chrono::prelude6,121
pub struct Renderer 8,146
    pipe: RenderPipeline,9,168
const HEADING_ID: &str str12,197
const EMAIL_ID: &str str13,233
const EVENTS_ID: &str str14,265
const HEADING_POS: Pos 16,300
const EMAIL_POS: Pos 17,336
const EVENTS_POS: Pos 18,372
const INSTR1_POS: Pos 19,408
const CODE_POS: Pos 20,445
const INSTR2_POS: Pos 21,480
const EXPIRY_POS: Pos 22,518
const LARGE_SIZE: u32=24,557
const SMALL_SIZE: u32=25,584
const INSTR_SIZE: u32=26,610
const HEADING_SIZE: u32 27,636
const EMAIL_SIZE: u32 28,666
const EVENTS_SIZE: u32 29,694
const DATE_FORMAT: &str str31,724
const TIME_FORMAT: &str str32,759
const NO_EMAIL: &str str34,795
const NO_EVENTS: &str str35,839
const START_DELIMITER: &str str36,876
const END_DELIMITER: &str str37,911
const SUMMARY_DELIMITER: &str str38,944
const TIME_LEN: usize 41,1018

src/stm.rs,0

target/debug/build/mime_guess-03509d51952c9685/out/mime_types_generated.rs,0
